openapi: 3.0.1
info:
  title: Ansa
  version: 0.1.0
servers:
  - url: /v1
paths:
  /health:
    get:
      summary: used for healthcheck
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/health_response'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
  /customers:
    get:
      summary: list all customers
      operationId: listCustomers
      parameters:
        - name: cursor
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            maximum: 50
            minimum: 1
            type: integer
            format: int32
        - name: direction
          in: query
          schema:
            type: string
            enum:
              - forward
              - backward
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customer__customer_list_response'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
    post:
      summary: create a customer balance at a merchant
      operationId: createCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customer__create_customer_args'
        required: true
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customer__customer'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        409:
          description: conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
      x-codegen-request-body-name: args
  /customers/count:
    get:
      summary: count all customers at a merchant
      operationId: countCustomers
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/count_response'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
  /customers/search:
    get:
      summary: Retrieve an existing Customer object by email, id, or phone number
      operationId: searchCustomer
      parameters:
        - name: email
          in: query
          schema:
            type: string
        - name: customerId
          in: query
          schema:
            type: string
        - name: phoneNumber
          in: query
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customer__customer'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        404:
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
  /customers/clone:
    post:
      summary:
        create a customer balance at a merchant by cloning the customer from
        an existing source
      operationId: createCustomerClone
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customer__create_customer_clone_args'
        required: true
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customer__create_customer_clone_response'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
      x-codegen-request-body-name: args
  /customers/{customerId}:
    get:
      summary: Retrieve an existing Customer object by its identifier.
      operationId: getCustomer
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
            format: string
        - name: details
          in: query
          schema:
            type: boolean
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customer__customer'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
    put:
      summary: Update an existing customer
      operationId: updateCustomer
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
            format: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customer__update_customer_args'
        required: true
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customer__customer'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
      x-codegen-request-body-name: args
  /customers/{customerId}/deactivate:
    post:
      summary: Deactivate an existing Customer object by its identifier.
      operationId: deactivateCustomer
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
            format: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customer__customer'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
  /customers/{customerId}/payment-methods:
    get:
      summary: List all payment methods
      operationId: listPaymentMethods
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
            format: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customer__payment_methods_list'
        400:
          description: invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        403:
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        429:
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
    post:
      summary: Creates a PaymentMethod object.
      operationId: createPaymentMethod
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
            format: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customer__create_payment_method_args'
        required: true
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customer__payment_method'
        400:
          description: invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        402:
          description: request failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        403:
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        409:
          description: conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        429:
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
      x-codegen-request-body-name: args
  /customers/{customerId}/payment-methods/{paymentMethodId}:
    put:
      summary: Updates a PaymentMethod object.
      operationId: updatePaymentMethod
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
            format: string
        - name: paymentMethodId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customer__update_payment_method_args'
        required: true
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customer__payment_method'
        400:
          description: invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        402:
          description: request failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        403:
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        409:
          description: conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        429:
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
      x-codegen-request-body-name: args
    delete:
      summary: Delete a payment method.
      operationId: deletePaymentMethod
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
        - name: paymentMethodId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: The resource was deleted successfully.
          content: {}
        400:
          description: invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        403:
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        404:
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        429:
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
  /customers/{customerId}/payment-methods/clone:
    post:
      summary: create a payment method by cloning it from an existing source
      operationId: createPaymentMethodClone
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
            format: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customer__create_payment_method_clone_args'
        required: true
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customer__create_payment_method_clone_response'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
      x-codegen-request-body-name: args
  /customers/{customerId}/auto-reload:
    get:
      summary: Retrieve the auto reload configuration for a customer.
      operationId: getAutoReloadConfig
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
            format: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customer__auto_reload_config_response'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
    post:
      summary: Update the auto reload configuration for a customer.
      operationId: setAutoReloadConfig
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
            format: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customer__auto_reload_config_args'
        required: true
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customer__auto_reload_config_response'
        400:
          description: invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
      x-codegen-request-body-name: args
  /customers/{customerId}/add-balance:
    post:
      summary: add funds to a customer balance
      operationId: addBalance
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
            format: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customer__add_balance_args'
        required: false
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customer__add_balance_response'
        400:
          description: invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        402:
          description: request failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        403:
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
      x-codegen-request-body-name: args
  /customers/{customerId}/use-balance:
    post:
      summary: use the customer balance funds to complete a purchase
      operationId: useBalance
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
            format: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customer__use_balance_args'
        required: false
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customer__use_balance_response'
        400:
          description: invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        402:
          description: request failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        403:
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
      x-codegen-request-body-name: args
  /customers/{customerId}/transactions:
    get:
      summary: retrieve all transactions involving this customer
      operationId: listCustomerTransactions
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
            format: string
        - name: transactionType
          in: query
          schema:
            type: string
            format: string
        - name: label
          in: query
          schema:
            type: string
            format: string
        - name: cursor
          in: query
          schema:
            type: string
            format: string
        - name: limit
          in: query
          schema:
            maximum: 50
            minimum: 1
            type: integer
            format: int32
        - name: createdAtOrBefore
          in: query
          schema:
            type: string
            format: date-time
        - name: createdAtOrAfter
          in: query
          schema:
            type: string
            format: date-time
        - name: direction
          in: query
          schema:
            type: string
            enum:
              - forward
              - backward
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/list_transactions_response'
        400:
          description: invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        429:
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
  /customers/{customerId}/virtual-card:
    get:
      summary: get virtual card for a given customer
      operationId: getVirtualCard
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
            format: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/virtual_card'
        400:
          description: invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        402:
          description: request failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        403:
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
    put:
      summary: update the virtual card for a given consumer
      operationId: updateVirtualCard
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
            format: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customer__update_virtual_card_args'
        required: true
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/virtual_card'
        400:
          description: invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        402:
          description: request failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        403:
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
      x-codegen-request-body-name: args
    post:
      summary: create a virtual card for a given customer
      operationId: createVirtualCard
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
            format: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/virtual_card'
        400:
          description: invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        402:
          description: request failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        403:
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
  /customers/{customerId}/virtual-card/transactions:
    get:
      summary: retrieve all transactions for this virtual card
      operationId: listVirtualCardTransactions
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
            format: string
        - name: cursor
          in: query
          schema:
            type: string
            format: string
        - name: limit
          in: query
          schema:
            maximum: 50
            minimum: 1
            type: integer
            format: int32
        - name: direction
          in: query
          schema:
            type: string
            enum:
              - forward
              - backward
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/list_virtual_card_transactions_response'
        400:
          description: invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        429:
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
  /customers/{customerId}/virtual-card/transactions/count:
    get:
      summary: count all virtual card transactions
      operationId: countVirtualCardTxns
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
            format: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/count_response'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
  /customers/{customerId}/virtual-cards/{virtualCardId}/provision:
    post:
      summary: provision a given virtual card
      operationId: provisionVirtualCard
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
            format: string
        - name: virtualCardId
          in: path
          required: true
          schema:
            type: string
            format: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customer__virtual_card_provision_args'
        required: false
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customer__virtual_card_provision_response'
        400:
          description: invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        402:
          description: request failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        403:
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
      x-codegen-request-body-name: args
  /refunds/balance:
    post:
      summary: initiate a refund to a customer's balance
      operationId: merchantRefundBalance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/merchant__refund_args'
        required: true
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/merchant__refund_response'
        400:
          description: invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        402:
          description: request failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        403:
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        409:
          description: conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        429:
          description: conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
      x-codegen-request-body-name: args
  /refunds/payment-method:
    post:
      summary: initiate a refund to a customer's payment method
      operationId: merchantRefundPaymentMethod
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/merchant__refund_args'
        required: true
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/merchant__refund_response'
        400:
          description: invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        402:
          description: request failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        403:
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        409:
          description: conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        429:
          description: conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
      x-codegen-request-body-name: args
  /refunds/{refundId}:
    get:
      summary: get details about refund
      operationId: merchantGetRefund
      parameters:
        - name: refundId
          in: path
          required: true
          schema:
            type: string
            format: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/merchant__refund_response'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        404:
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
  /fund-customer-balance:
    post:
      summary: merchant add funds to a customers balance
      operationId: merchantFundBalance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/merchant__fund_balance_args'
        required: true
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/merchant__fund_balance_response'
        400:
          description: invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        409:
          description: conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
      x-codegen-request-body-name: args
  /initialize-payment-session:
    post:
      summary: initiate a PaymentSession object for client authorization
      operationId: initializePaymentSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/initialize_payment_session_args'
        required: true
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/initialize_payment_session_response'
        400:
          description: invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        403:
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
      x-codegen-request-body-name: args
  /merchants/{merchantId}:
    get:
      summary: get details about a merchant
      operationId: merchantGet
      parameters:
        - name: merchantId
          in: path
          required: true
          schema:
            type: string
            format: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/merchant'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
    put:
      summary: update details for a merchant
      operationId: updateMerchant
      parameters:
        - name: merchantId
          in: path
          required: true
          schema:
            type: string
            format: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/merchant__update_merchant_args'
        required: true
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/merchant'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
      x-codegen-request-body-name: args
  /merchants/{merchantId}/balance:
    get:
      summary: get the merchant's current balance
      operationId: getMerchantBalance
      parameters:
        - name: merchantId
          in: path
          required: true
          schema:
            type: string
            format: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/merchant__balance'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
  /merchants/{merchantId}/insights:
    get:
      summary: fetch merchant insights
      operationId: merchantInsights
      parameters:
        - name: merchantId
          in: path
          required: true
          schema:
            type: string
            format: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/merchant__insights'
        400:
          description: invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        409:
          description: conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
  /transactions:
    get:
      summary: retrieve all transactions with a given merchant
      operationId: listMerchantTransactions
      parameters:
        - name: customerId
          in: query
          schema:
            type: string
            format: string
        - name: transactionType
          in: query
          schema:
            type: string
            format: string
        - name: label
          in: query
          schema:
            type: string
            format: string
        - name: cursor
          in: query
          schema:
            type: string
            format: string
        - name: limit
          in: query
          schema:
            maximum: 50
            minimum: 1
            type: integer
            format: int32
        - name: createdAtOrBefore
          in: query
          schema:
            type: string
            format: date-time
        - name: createdAtOrAfter
          in: query
          schema:
            type: string
            format: date-time
        - name: direction
          in: query
          schema:
            type: string
            enum:
              - forward
              - backward
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/list_transactions_response'
        400:
          description: invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        429:
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
  /transactions/count:
    get:
      summary: count number of transactions
      operationId: countTransactions
      parameters:
        - name: customerId
          in: query
          schema:
            type: string
            format: string
        - name: transactionType
          in: query
          schema:
            type: string
            format: string
        - name: label
          in: query
          schema:
            type: string
            format: string
        - name: createdAtOrBefore
          in: query
          schema:
            type: string
            format: date-time
        - name: createdAtOrAfter
          in: query
          schema:
            type: string
            format: date-time
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/count_response'
        400:
          description: invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        429:
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
  /transactions/{transactionId}:
    get:
      summary: get a merchant transaction
      operationId: getMerchantTransaction
      parameters:
        - name: transactionId
          in: path
          required: true
          schema:
            type: string
            format: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ledger_transaction'
        400:
          description: invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        429:
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
  /transactions/{transactionId}/label:
    put:
      summary: update a specified transaction's label
      operationId: updateMerchantTransactionLabel
      parameters:
        - name: transactionId
          in: path
          required: true
          schema:
            type: string
            format: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/merchant__update_transaction_label_args'
        required: true
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ledger_transaction'
        400:
          description: invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        429:
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
      x-codegen-request-body-name: args
  /transactions/{transactionId}/metadata:
    put:
      summary: update a specified transaction's metadata and label
      operationId: updateTransactionMetadata
      parameters:
        - name: transactionId
          in: path
          required: true
          schema:
            type: string
            format: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/merchant__update_transaction_metadata_args'
        required: true
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ledger_transaction'
        400:
          description: invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        429:
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
      x-codegen-request-body-name: args
  /transactions/{transactionId}/refunds:
    get:
      summary: get refunds for a transaction
      operationId: getMerchantTransactionRefunds
      parameters:
        - name: transactionId
          in: path
          required: true
          schema:
            type: string
            format: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/list_transactions_response_no_pagination'
        400:
          description: invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        429:
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
  /admin/merchants/{merchantId}/auth/refresh:
    post:
      summary: refresh Ansa merchant's auth credentials
      operationId: adminAuthRefresh
      parameters:
        - name: merchantId
          in: path
          required: true
          schema:
            type: string
            format: string
      responses:
        200:
          description: success
          content: {}
        400:
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        500:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
  /admin/settle-merchant-balance:
    post:
      summary: trigger settlement for a merchant's pending payout balance
      operationId: settleMerchantBalance
      requestBody:
        content:
          application/json:
            schema:
              required:
                - merchantId
              type: object
              properties:
                merchantId:
                  type: string
                  format: string
                overrideSettlementAmount:
                  type: integer
                  format: int64
                  nullable: true
        required: true
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/admin__settle_merchant_balance_response'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      x-codegen-request-body-name: args
  /internal-admin/merchants:
    get:
      summary: list all Ansa merchants and their information
      operationId: internalAdminListMerchants
      parameters:
        - name: start
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internal-admin__merchants_list_response'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
    post:
      summary: create an Ansa merchant account
      operationId: internalAdminCreateMerchant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/internal-admin__create_merchant_args'
        required: true
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internal-admin__merchant_api_key'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
      x-codegen-request-body-name: args
  /internal-admin/merchants/{merchantId}/auth/api-keys:
    post:
      summary: create an Ansa merchant api key
      operationId: internalAdminCreateMerchantApiKey
      parameters:
        - name: merchantId
          in: path
          required: true
          schema:
            type: string
            format: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internal-admin__merchant_api_key'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
  /internal-admin/merchants/{merchantId}/customers:
    get:
      summary: list all customers under an Ansa merchant
      operationId: internalAdminListCustomers
      parameters:
        - name: merchantId
          in: path
          required: true
          schema:
            type: string
            format: string
        - name: cursor
          in: query
          schema:
            type: string
        - name: direction
          in: query
          schema:
            type: string
            enum:
              - forward
              - backward
        - name: limit
          in: query
          schema:
            maximum: 50
            minimum: 1
            type: integer
            format: int32
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internal-admin__customers_list_response'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
  /internal-admin/merchants/{merchantId}/balance:
    get:
      summary: get the merchant balance
      operationId: internalAdminGetMerchantBalance
      parameters:
        - name: merchantId
          in: path
          required: true
          schema:
            type: string
            format: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internal-admin__balance'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
  /internal-admin/merchants/{merchantId}/fund-customer-balance:
    post:
      summary: internal admin endpoint to add funds to a customers balance
      operationId: internalAdminMerchantFundBalance
      parameters:
        - name: merchantId
          in: path
          required: true
          schema:
            type: string
            format: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/internal-admin__fund_balance_args'
        required: true
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internal-admin__fund_balance_response'
        400:
          description: invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        409:
          description: conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
      x-codegen-request-body-name: args
  /internal-admin/merchants/{merchantId}/total-customer-balance:
    get:
      summary: get total customer balance for a merchant
      operationId: internalAdminGetMerchantTotalCustomerBalance
      parameters:
        - name: merchantId
          in: path
          required: true
          schema:
            type: string
            format: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internal-admin__balance'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
  /internal-admin/merchants/{merchantId}/customers/{customerId}:
    get:
      summary: get a customer under an Ansa merchant
      operationId: internalAdminGetCustomer
      parameters:
        - name: merchantId
          in: path
          required: true
          schema:
            type: string
            format: string
        - name: customerId
          in: path
          required: true
          schema:
            type: string
            format: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internal-admin__customer'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
  /internal-admin/merchants/{merchantId}/activate-virtual-card-program:
    post:
      summary: Activate virtual card program for a merchant
      operationId: internalAdminActivateVirtualCardProgram
      parameters:
        - name: merchantId
          in: path
          required: true
          schema:
            type: string
            format: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/internal-admin__activate_virtual_card_program_args'
        required: true
      responses:
        200:
          description: success
          content: {}
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
      x-codegen-request-body-name: args
  /internal-admin/merchants/{merchantId}/acceptor-ids:
    get:
      summary: list all acceptor ids for a given merchant
      operationId: internalAdminListMerchantAcceptorIds
      parameters:
        - name: merchantId
          in: path
          required: true
          schema:
            type: string
            format: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internal-admin__merchant_acceptor_ids_list_response'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
    put:
      summary: upsert a list of acceptor ids for a given merchant
      operationId: internalAdminUpsertMerchantAcceptorIds
      parameters:
        - name: merchantId
          in: path
          required: true
          schema:
            type: string
            format: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/internal-admin__upsert_merchant_acceptor_ids_args'
        required: true
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internal-admin__merchant_acceptor_ids_list_response'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
      x-codegen-request-body-name: args
  /webhook/auth/square/call-back:
    get:
      summary: called by PSPs to register auth tokens to the new merchant
      operationId: webhookSquareAuthCallBack
      parameters:
        - name: code
          in: query
          schema:
            type: string
            format: string
            nullable: true
        - name: state
          in: query
          schema:
            type: string
            format: string
            nullable: true
        - name: response_type
          in: query
          schema:
            type: string
            format: string
            nullable: true
        - name: error_code
          in: query
          schema:
            type: string
            format: string
            nullable: true
      responses:
        200:
          description: success
          content: {}
        400:
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        500:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
  /webhook/refunds/square:
    post:
      summary: called by Square to process refunds
      operationId: webhookHandleSquareRefund
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook__handle_square_refund_args'
        required: true
      responses:
        200:
          description: success
          content: {}
        202:
          description: accepted
          content: {}
        400:
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        500:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
      x-codegen-request-body-name: args
  /webhook/refunds/stripe:
    post:
      summary: called by Stripe to process refunds
      operationId: webhookHandleStripeRefund
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/external__stripe__event'
        required: true
      responses:
        200:
          description: success
          content: {}
        202:
          description: accepted
          content: {}
        400:
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        500:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
      x-codegen-request-body-name: args
  /webhook/virtual-cards/authorization:
    post:
      summary: called by Lithic to process virtual card transaction authorizations
      operationId: webhookHandleVirtualCardsAuthorization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhook__virtual-card-authorization-transaction__asa_transaction'
        required: true
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook__virtual-card-authorization-transaction__asa_transaction_response'
        400:
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        500:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
      x-codegen-request-body-name: args
  /webhook/test:
    post:
      summary: used for webhook testing (Svix)
      operationId: webhookTest
      parameters:
        - name: webhook-id
          in: header
          required: true
          schema:
            type: string
        - name: webhook-timestamp
          in: header
          required: true
          schema:
            type: string
        - name: webhook-signature
          in: header
          required: true
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook__webhook_test_response'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansa_error'
components:
  schemas:
    external__stripe__charge:
      title: Charge
      required:
        - amount
        - amount_refunded
        - billing_details
        - captured
        - created
        - currency
        - disputed
        - id
        - livemode
        - metadata
        - object
        - paid
        - refunded
        - refunds
        - status
      type: object
      properties:
        amount:
          type: integer
          description:
            Amount intended to be collected by this payment. A positive
            integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal)
            (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a zero-decimal
            currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts).
            The amount value supports up to eight digits (e.g., a value of 99999999
            for a USD charge of $999,999.99).
        amount_refunded:
          type: integer
          description:
            Amount in %s refunded (can be less than the amount attribute
            on the charge if a partial refund was issued).
        application:
          type: string
          description: ID of the Connect application that created the charge.
          x-expansionResources:
            oneOf:
              - $ref: '#/definitions/application'
        application_fee:
          type: string
          description:
            The application fee (if any) for the charge. [See the Connect
            documentation](https://stripe.com/docs/connect/direct-charges#collecting-fees)
            for details.
          x-expansionResources:
            oneOf:
              - $ref: '#/definitions/application_fee'
        application_fee_amount:
          type: integer
          description:
            The amount of the application fee (if any) for the charge.
            [See the Connect documentation](https://stripe.com/docs/connect/direct-charges#collecting-fees)
            for details.
        balance_transaction:
          type: string
          description:
            ID of the balance transaction that describes the impact of
            this charge on your account balance (not including refunds or disputes).
          x-expansionResources:
            oneOf:
              - $ref: '#/definitions/balance_transaction'
        billing_details:
          title: billing_details
          type: object
          properties:
            address:
              title: Address
              type: object
              properties:
                city:
                  type: string
                  description: City, district, suburb, town, or village.
                country:
                  type: string
                  description: Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
                line1:
                  type: string
                  description: Address line 1 (e.g., street, PO Box, or company name).
                line2:
                  type: string
                  description: Address line 2 (e.g., apartment, suite, unit, or building).
                postal_code:
                  type: string
                  description: ZIP or postal code.
                state:
                  type: string
                  description: State, county, province, or region.
              x-expandableFields: []
            email:
              type: string
              description: Email address.
            name:
              type: string
              description: Full name.
            phone:
              type: string
              description: Billing phone number (including extension).
          x-expandableFields:
            - address
        calculated_statement_descriptor:
          type: string
          description:
            The full statement descriptor that is passed to card networks,
            and that is displayed on your customers' credit card and bank statements.
            Allows you to see what the statement descriptor looks like after the static
            and dynamic portions are combined.
        captured:
          type: boolean
          description:
            If the charge was created without capturing, this Boolean represents
            whether it is still uncaptured or has since been captured.
        created:
          type: integer
          description:
            Time at which the object was created. Measured in seconds since
            the Unix epoch.
        currency:
          type: string
          description:
            Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
            in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
        customer:
          type: string
          description: ID of the customer this charge is for if one exists.
          x-expansionResources:
            oneOf:
              - $ref: '#/definitions/customer'
              - $ref: '#/definitions/deleted_customer'
        description:
          type: string
          description:
            An arbitrary string attached to the object. Often useful for
            displaying to users.
        disputed:
          type: boolean
          description: Whether the charge has been disputed.
        failure_code:
          type: string
          description:
            Error code explaining reason for charge failure if available
            (see [the errors section](https://stripe.com/docs/api#errors) for a list
            of codes).
        failure_message:
          type: string
          description:
            Message to user further explaining reason for charge failure
            if available.
        fraud_details:
          title: ChargeFraudDetails
          type: object
          properties:
            stripe_report:
              type: string
              description: Assessments from Stripe. If set, the value is `fraudulent`.
            user_report:
              type: string
              description:
                Assessments reported by you. If set, possible values of
                are `safe` and `fraudulent`.
          x-expandableFields: []
        id:
          type: string
          description: Unique identifier for the object.
        invoice:
          type: string
          description: ID of the invoice this charge is for if one exists.
          x-expansionResources:
            oneOf:
              - $ref: '#/definitions/invoice'
        livemode:
          type: boolean
          description:
            Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
        metadata:
          type: object
          properties: {}
          description:
            Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
        object:
          type: string
          description:
            String representing the object's type. Objects of the same
            type share the same value.
          enum:
            - charge
        on_behalf_of:
          type: string
          description:
            The account (if any) the charge was made on behalf of without
            triggering an automatic transfer. See the [Connect documentation](https://stripe.com/docs/connect/charges-transfers)
            for details.
          x-expansionResources:
            oneOf:
              - $ref: '#/definitions/account'
        order:
          type: string
          description: ID of the order this charge is for if one exists.
          x-expansionResources:
            oneOf:
              - $ref: '#/definitions/order'
        outcome:
          title: ChargeOutcome
          required:
            - type
          type: object
          properties:
            network_status:
              type: string
              description:
                Possible values are `approved_by_network`, `declined_by_network`,
                `not_sent_to_network`, and `reversed_after_approval`. The value `reversed_after_approval`
                indicates the payment was [blocked by Stripe](https://stripe.com/docs/declines#blocked-payments)
                after bank authorization, and may temporarily appear as "pending"
                on a cardholder's statement.
            reason:
              type: string
              description:
                An enumerated value providing a more detailed explanation
                of the outcome's `type`. Charges blocked by Radar's default block
                rule have the value `highest_risk_level`. Charges placed in review
                by Radar's default review rule have the value `elevated_risk_level`.
                Charges authorized, blocked, or placed in review by custom rules have
                the value `rule`. See [understanding declines](https://stripe.com/docs/declines)
                for more details.
            risk_level:
              type: string
              description:
                Stripe's evaluation of the riskiness of the payment. Possible
                values for evaluated payments are `normal`, `elevated`, `highest`.
                For non-card payments, and card-based payments predating the public
                assignment of risk levels, this field will have the value `not_assessed`.
                In the event of an error in the evaluation, this field will have the
                value `unknown`.
            risk_score:
              type: integer
              description:
                Stripe's evaluation of the riskiness of the payment. Possible
                values for evaluated payments are between 0 and 100. For non-card
                payments, card-based payments predating the public assignment of risk
                scores, or in the event of an error during evaluation, this field
                will not be present. This field is only available with Radar for Fraud
                Teams.
            rule:
              type: string
              description: The ID of the Radar rule that matched the payment, if applicable.
              x-expansionResources:
                oneOf:
                  - $ref: '#/definitions/rule'
            seller_message:
              type: string
              description:
                A human-readable description of the outcome type and reason,
                designed for you (the recipient of the payment), not your customer.
            type:
              type: string
              description:
                Possible values are `authorized`, `manual_review`, `issuer_declined`,
                `blocked`, and `invalid`. See [understanding declines](https://stripe.com/docs/declines)
                and [Radar reviews](https://stripe.com/docs/radar/reviews) for details.
          x-expandableFields:
            - rule
        paid:
          type: boolean
          description:
            '`true` if the charge succeeded, or was successfully authorized
            for later capture.'
        payment_intent:
          type: string
          description:
            ID of the PaymentIntent associated with this charge, if one
            exists.
          x-expansionResources:
            oneOf:
              - $ref: '#/definitions/payment_intent'
        payment_method:
          type: string
          description: ID of the payment method used in this charge.
        payment_method_details:
          title: payment_method_details
          required:
            - type
          type: object
          properties:
            ach_credit_transfer:
              title: payment_method_details_ach_credit_transfer
              type: object
              properties:
                account_number:
                  type: string
                  description: Account number to transfer funds to.
                bank_name:
                  type: string
                  description: Name of the bank associated with the routing number.
                routing_number:
                  type: string
                  description:
                    Routing transit number for the bank account to transfer
                    funds to.
                swift_code:
                  type: string
                  description:
                    SWIFT code of the bank associated with the routing
                    number.
              x-expandableFields: []
            ach_debit:
              title: payment_method_details_ach_debit
              type: object
              properties:
                account_holder_type:
                  type: string
                  description:
                    Type of entity that holds the account. This can be
                    either `individual` or `company`.
                  enum:
                    - company
                    - individual
                bank_name:
                  type: string
                  description: Name of the bank associated with the bank account.
                country:
                  type: string
                  description:
                    Two-letter ISO code representing the country the bank
                    account is located in.
                fingerprint:
                  type: string
                  description:
                    Uniquely identifies this particular bank account. You
                    can use this attribute to check whether two bank accounts are
                    the same.
                last4:
                  type: string
                  description: Last four digits of the bank account number.
                routing_number:
                  type: string
                  description: Routing transit number of the bank account.
              x-expandableFields: []
            alipay:
              title: payment_method_details_alipay
              type: object
              properties: {}
              x-expandableFields: []
            au_becs_debit:
              title: payment_method_details_au_becs_debit
              type: object
              properties:
                bsb_number:
                  type: string
                  description: Bank-State-Branch number of the bank account.
                fingerprint:
                  type: string
                  description:
                    Uniquely identifies this particular bank account. You
                    can use this attribute to check whether two bank accounts are
                    the same.
                last4:
                  type: string
                  description: Last four digits of the bank account number.
                mandate:
                  type: string
                  description: ID of the mandate used to make this payment.
              x-expandableFields: []
            bancontact:
              title: payment_method_details_bancontact
              type: object
              properties:
                bank_code:
                  type: string
                  description: Bank code of bank associated with the bank account.
                bank_name:
                  type: string
                  description: Name of the bank associated with the bank account.
                bic:
                  type: string
                  description:
                    Bank Identifier Code of the bank associated with the
                    bank account.
                iban_last4:
                  type: string
                  description: Last four characters of the IBAN.
                preferred_language:
                  type: string
                  description: |-
                    Preferred language of the Bancontact authorization page that the customer is redirected to.
                    Can be one of `en`, `de`, `fr`, or `nl`
                  enum:
                    - de
                    - en
                    - fr
                    - nl
                verified_name:
                  type: string
                  description: |-
                    Owner's verified full name. Values are verified or provided by Bancontact directly
                    (if supported) at the time of authorization or settlement. They cannot be set or mutated.
              x-expandableFields: []
            card:
              title: payment_method_details_card
              type: object
              properties:
                brand:
                  type: string
                  description:
                    Card brand. Can be `amex`, `diners`, `discover`, `jcb`,
                    `mastercard`, `unionpay`, `visa`, or `unknown`.
                checks:
                  title: payment_method_details_card_checks
                  type: object
                  properties:
                    address_line1_check:
                      type: string
                      description:
                        If a address line1 was provided, results of the
                        check, one of `pass`, `fail`, `unavailable`, or `unchecked`.
                    address_postal_code_check:
                      type: string
                      description:
                        If a address postal code was provided, results
                        of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.
                    cvc_check:
                      type: string
                      description:
                        If a CVC was provided, results of the check, one
                        of `pass`, `fail`, `unavailable`, or `unchecked`.
                  x-expandableFields: []
                country:
                  type: string
                  description:
                    Two-letter ISO code representing the country of the
                    card. You could use this attribute to get a sense of the international
                    breakdown of cards you've collected.
                exp_month:
                  type: integer
                  description:
                    Two-digit number representing the card's expiration
                    month.
                exp_year:
                  type: integer
                  description:
                    Four-digit number representing the card's expiration
                    year.
                fingerprint:
                  type: string
                  description:
                    Uniquely identifies this particular card number. You
                    can use this attribute to check whether two customers who’ve signed
                    up with you are using the same card number,for example. For payment
                    methods that tokenize card information (Apple Pay, Google Pay),
                    the tokenized number might be provided instead of the underlying
                    card number.
                funding:
                  type: string
                  description:
                    Card funding type. Can be `credit`, `debit`, `prepaid`,
                    or `unknown`.
                installments:
                  title: payment_method_details_card_installments
                  type: object
                  properties:
                    plan:
                      title: payment_method_details_card_installments_plan
                      required:
                        - type
                      type: object
                      properties:
                        count:
                          type: integer
                          description:
                            For `fixed_count` installment plans, this is
                            the number of installment payments your customer will
                            make to their credit card.
                        interval:
                          type: string
                          description: |-
                            For `fixed_count` installment plans, this is the interval between installment payments your customer will make to their credit card.
                            One of `month`.
                          enum:
                            - month
                        type:
                          type: string
                          description: Type of installment plan, one of `fixed_count`.
                          enum:
                            - fixed_count
                      x-expandableFields: []
                  x-expandableFields:
                    - plan
                last4:
                  type: string
                  description: The last four digits of the card.
                network:
                  type: string
                  description:
                    Identifies which network this charge was processed
                    on. Can be `amex`, `diners`, `discover`, `interac`, `jcb`, `mastercard`,
                    `unionpay`, `visa`, or `unknown`.
                three_d_secure:
                  title: three_d_secure_details
                  required:
                    - version
                  type: object
                  properties:
                    authenticated:
                      type: boolean
                      description:
                        Whether or not authentication was performed. 3D
                        Secure will succeed without authentication when the card is
                        not enrolled.
                    succeeded:
                      type: boolean
                      description: Whether or not 3D Secure succeeded.
                    version:
                      type: string
                      description:
                        The version of 3D Secure that was used for this
                        payment.
                  x-expandableFields: []
                wallet:
                  title: payment_method_details_card_wallet
                  required:
                    - type
                  type: object
                  properties:
                    amex_express_checkout:
                      title: payment_method_details_card_wallet_amex_express_checkout
                      type: object
                      properties: {}
                      x-expandableFields: []
                    apple_pay:
                      title: payment_method_details_card_wallet_apple_pay
                      type: object
                      properties: {}
                      x-expandableFields: []
                    dynamic_last4:
                      type: string
                      description:
                        (For tokenized numbers only.) The last four digits
                        of the device account number.
                    google_pay:
                      title: payment_method_details_card_wallet_google_pay
                      type: object
                      properties: {}
                      x-expandableFields: []
                    masterpass:
                      title: payment_method_details_card_wallet_masterpass
                      type: object
                      properties:
                        billing_address:
                          title: Address
                          type: object
                          properties:
                            city:
                              type: string
                              description: City, district, suburb, town, or village.
                            country:
                              type: string
                              description: Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
                            line1:
                              type: string
                              description:
                                Address line 1 (e.g., street, PO Box, or
                                company name).
                            line2:
                              type: string
                              description:
                                Address line 2 (e.g., apartment, suite,
                                unit, or building).
                            postal_code:
                              type: string
                              description: ZIP or postal code.
                            state:
                              type: string
                              description: State, county, province, or region.
                          x-expandableFields: []
                        email:
                          type: string
                          description:
                            Owner's verified email. Values are verified
                            or provided by the wallet directly (if supported) at the
                            time of authorization or settlement. They cannot be set
                            or mutated.
                        name:
                          type: string
                          description:
                            Owner's verified full name. Values are verified
                            or provided by the wallet directly (if supported) at the
                            time of authorization or settlement. They cannot be set
                            or mutated.
                        shipping_address:
                          title: Address
                          type: object
                          properties:
                            city:
                              type: string
                              description: City, district, suburb, town, or village.
                            country:
                              type: string
                              description: Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
                            line1:
                              type: string
                              description:
                                Address line 1 (e.g., street, PO Box, or
                                company name).
                            line2:
                              type: string
                              description:
                                Address line 2 (e.g., apartment, suite,
                                unit, or building).
                            postal_code:
                              type: string
                              description: ZIP or postal code.
                            state:
                              type: string
                              description: State, county, province, or region.
                          x-expandableFields: []
                      x-expandableFields:
                        - billing_address
                        - shipping_address
                    samsung_pay:
                      title: payment_method_details_card_wallet_samsung_pay
                      type: object
                      properties: {}
                      x-expandableFields: []
                    type:
                      type: string
                      description:
                        The type of the card wallet, one of `amex_express_checkout`,
                        `apple_pay`, `google_pay`, `masterpass`, `samsung_pay`, or
                        `visa_checkout`. An additional hash is included on the Wallet
                        subhash with a name matching this value. It contains additional
                        information specific to the card wallet type.
                      enum:
                        - amex_express_checkout
                        - apple_pay
                        - google_pay
                        - masterpass
                        - samsung_pay
                        - visa_checkout
                    visa_checkout:
                      title: payment_method_details_card_wallet_visa_checkout
                      type: object
                      properties:
                        billing_address:
                          title: Address
                          type: object
                          properties:
                            city:
                              type: string
                              description: City, district, suburb, town, or village.
                            country:
                              type: string
                              description: Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
                            line1:
                              type: string
                              description:
                                Address line 1 (e.g., street, PO Box, or
                                company name).
                            line2:
                              type: string
                              description:
                                Address line 2 (e.g., apartment, suite,
                                unit, or building).
                            postal_code:
                              type: string
                              description: ZIP or postal code.
                            state:
                              type: string
                              description: State, county, province, or region.
                          x-expandableFields: []
                        email:
                          type: string
                          description:
                            Owner's verified email. Values are verified
                            or provided by the wallet directly (if supported) at the
                            time of authorization or settlement. They cannot be set
                            or mutated.
                        name:
                          type: string
                          description:
                            Owner's verified full name. Values are verified
                            or provided by the wallet directly (if supported) at the
                            time of authorization or settlement. They cannot be set
                            or mutated.
                        shipping_address:
                          title: Address
                          type: object
                          properties:
                            city:
                              type: string
                              description: City, district, suburb, town, or village.
                            country:
                              type: string
                              description: Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
                            line1:
                              type: string
                              description:
                                Address line 1 (e.g., street, PO Box, or
                                company name).
                            line2:
                              type: string
                              description:
                                Address line 2 (e.g., apartment, suite,
                                unit, or building).
                            postal_code:
                              type: string
                              description: ZIP or postal code.
                            state:
                              type: string
                              description: State, county, province, or region.
                          x-expandableFields: []
                      x-expandableFields:
                        - billing_address
                        - shipping_address
                  x-expandableFields:
                    - amex_express_checkout
                    - apple_pay
                    - google_pay
                    - masterpass
                    - samsung_pay
                    - visa_checkout
              x-expandableFields:
                - checks
                - installments
                - three_d_secure
                - wallet
            card_present:
              title: payment_method_details_card_present
              type: object
              properties:
                brand:
                  type: string
                  description:
                    Card brand. Can be `amex`, `diners`, `discover`, `jcb`,
                    `mastercard`, `unionpay`, `visa`, or `unknown`.
                cardholder_name:
                  type: string
                  description:
                    The cardholder name as read from the card, in [ISO
                    7813](https://en.wikipedia.org/wiki/ISO/IEC_7813) format. May
                    include alphanumeric characters, special characters and first/last
                    name separator (`/`).
                country:
                  type: string
                  description:
                    Two-letter ISO code representing the country of the
                    card. You could use this attribute to get a sense of the international
                    breakdown of cards you've collected.
                emv_auth_data:
                  type: string
                  description: Authorization response cryptogram.
                exp_month:
                  type: integer
                  description:
                    Two-digit number representing the card's expiration
                    month.
                exp_year:
                  type: integer
                  description:
                    Four-digit number representing the card's expiration
                    year.
                fingerprint:
                  type: string
                  description:
                    Uniquely identifies this particular card number. You
                    can use this attribute to check whether two customers who’ve signed
                    up with you are using the same card number,for example. For payment
                    methods that tokenize card information (Apple Pay, Google Pay),
                    the tokenized number might be provided instead of the underlying
                    card number.
                funding:
                  type: string
                  description:
                    Card funding type. Can be `credit`, `debit`, `prepaid`,
                    or `unknown`.
                generated_card:
                  type: string
                  description:
                    ID of a card PaymentMethod generated from the card_present
                    PaymentMethod that may be attached to a Customer for future transactions.
                    Only present if it was possible to generate a card PaymentMethod.
                last4:
                  type: string
                  description: The last four digits of the card.
                network:
                  type: string
                  description:
                    Identifies which network this charge was processed
                    on. Can be `amex`, `diners`, `discover`, `interac`, `jcb`, `mastercard`,
                    `unionpay`, `visa`, or `unknown`.
                read_method:
                  type: string
                  description:
                    How were card details read in this transaction. Can
                    be contact_emv, contactless_emv, magnetic_stripe_fallback, magnetic_stripe_track2,
                    or contactless_magstripe_mode
                receipt:
                  title: payment_method_details_card_present_receipt
                  type: object
                  properties:
                    application_cryptogram:
                      type: string
                      description:
                        EMV tag 9F26, cryptogram generated by the integrated
                        circuit chip.
                    application_preferred_name:
                      type: string
                      description: Mnenomic of the Application Identifier.
                    authorization_code:
                      type: string
                      description: Identifier for this transaction.
                    authorization_response_code:
                      type: string
                      description: EMV tag 8A. A code returned by the card issuer.
                    cardholder_verification_method:
                      type: string
                      description: How the cardholder verified ownership of the card.
                    dedicated_file_name:
                      type: string
                      description:
                        EMV tag 84. Similar to the application identifier
                        stored on the integrated circuit chip.
                    terminal_verification_results:
                      type: string
                      description:
                        The outcome of a series of EMV functions performed
                        by the card reader.
                    transaction_status_information:
                      type: string
                      description:
                        An indication of various EMV functions performed
                        during the transaction.
                  x-expandableFields: []
              x-expandableFields:
                - receipt
            eps:
              title: payment_method_details_eps
              type: object
              properties:
                verified_name:
                  type: string
                  description: |-
                    Owner's verified full name. Values are verified or provided by EPS directly
                    (if supported) at the time of authorization or settlement. They cannot be set or mutated.
              x-expandableFields: []
            fpx:
              title: payment_method_details_fpx
              required:
                - bank
              type: object
              properties:
                bank:
                  type: string
                  description:
                    The customer's bank. Can be one of `affin_bank`, `alliance_bank`,
                    `ambank`, `bank_islam`, `bank_muamalat`, `bank_rakyat`, `bsn`,
                    `cimb`, `hong_leong_bank`, `hsbc`, `kfh`, `maybank2u`, `ocbc`,
                    `public_bank`, `rhb`, `standard_chartered`, `uob`, `deutsche_bank`,
                    `maybank2e`, or `pb_enterprise`.
                  enum:
                    - affin_bank
                    - alliance_bank
                    - ambank
                    - bank_islam
                    - bank_muamalat
                    - bank_rakyat
                    - bsn
                    - cimb
                    - deutsche_bank
                    - hong_leong_bank
                    - hsbc
                    - kfh
                    - maybank2e
                    - maybank2u
                    - ocbc
                    - pb_enterprise
                    - public_bank
                    - rhb
                    - standard_chartered
                    - uob
                transaction_id:
                  type: string
                  description:
                    Unique transaction id generated by FPX for every request
                    from the merchant
              x-expandableFields: []
            giropay:
              title: payment_method_details_giropay
              type: object
              properties:
                bank_code:
                  type: string
                  description: Bank code of bank associated with the bank account.
                bank_name:
                  type: string
                  description: Name of the bank associated with the bank account.
                bic:
                  type: string
                  description:
                    Bank Identifier Code of the bank associated with the
                    bank account.
                verified_name:
                  type: string
                  description: |-
                    Owner's verified full name. Values are verified or provided by Giropay directly
                    (if supported) at the time of authorization or settlement. They cannot be set or mutated.
              x-expandableFields: []
            ideal:
              title: payment_method_details_ideal
              type: object
              properties:
                bank:
                  type: string
                  description:
                    The customer's bank. Can be one of `abn_amro`, `asn_bank`,
                    `bunq`, `handelsbanken`, `ing`, `knab`, `moneyou`, `rabobank`,
                    `regiobank`, `sns_bank`, `triodos_bank`, or `van_lanschot`.
                  enum:
                    - abn_amro
                    - asn_bank
                    - bunq
                    - handelsbanken
                    - ing
                    - knab
                    - moneyou
                    - rabobank
                    - regiobank
                    - sns_bank
                    - triodos_bank
                    - van_lanschot
                bic:
                  type: string
                  description: The Bank Identifier Code of the customer's bank.
                  enum:
                    - ABNANL2A
                    - ASNBNL21
                    - BUNQNL2A
                    - FVLBNL22
                    - HANDNL2A
                    - INGBNL2A
                    - KNABNL2H
                    - MOYONL21
                    - RABONL2U
                    - RBRBNL21
                    - SNSBNL2A
                    - TRIONL2U
                iban_last4:
                  type: string
                  description: Last four characters of the IBAN.
                verified_name:
                  type: string
                  description: |-
                    Owner's verified full name. Values are verified or provided by iDEAL directly
                    (if supported) at the time of authorization or settlement. They cannot be set or mutated.
              x-expandableFields: []
            klarna:
              title: payment_method_details_klarna
              type: object
              properties: {}
              x-expandableFields: []
            multibanco:
              title: payment_method_details_multibanco
              type: object
              properties:
                entity:
                  type: string
                  description: Entity number associated with this Multibanco payment.
                reference:
                  type: string
                  description: Reference number associated with this Multibanco payment.
              x-expandableFields: []
            p24:
              title: payment_method_details_p24
              type: object
              properties:
                reference:
                  type: string
                  description: Unique reference for this Przelewy24 payment.
                verified_name:
                  type: string
                  description: |-
                    Owner's verified full name. Values are verified or provided by Przelewy24 directly
                    (if supported) at the time of authorization or settlement. They cannot be set or mutated.
              x-expandableFields: []
            sepa_debit:
              title: payment_method_details_sepa_debit
              type: object
              properties:
                bank_code:
                  type: string
                  description: Bank code of bank associated with the bank account.
                branch_code:
                  type: string
                  description: Branch code of bank associated with the bank account.
                country:
                  type: string
                  description:
                    Two-letter ISO code representing the country the bank
                    account is located in.
                fingerprint:
                  type: string
                  description:
                    Uniquely identifies this particular bank account. You
                    can use this attribute to check whether two bank accounts are
                    the same.
                last4:
                  type: string
                  description: Last four characters of the IBAN.
                mandate:
                  type: string
                  description: ID of the mandate used to make this payment.
              x-expandableFields: []
            sofort:
              title: payment_method_details_sofort
              type: object
              properties:
                bank_code:
                  type: string
                  description: Bank code of bank associated with the bank account.
                bank_name:
                  type: string
                  description: Name of the bank associated with the bank account.
                bic:
                  type: string
                  description:
                    Bank Identifier Code of the bank associated with the
                    bank account.
                country:
                  type: string
                  description:
                    Two-letter ISO code representing the country the bank
                    account is located in.
                iban_last4:
                  type: string
                  description: Last four characters of the IBAN.
                verified_name:
                  type: string
                  description: |-
                    Owner's verified full name. Values are verified or provided by SOFORT directly
                    (if supported) at the time of authorization or settlement. They cannot be set or mutated.
              x-expandableFields: []
            stripe_account:
              title: payment_method_details_stripe_account
              type: object
              properties: {}
              x-expandableFields: []
            type:
              type: string
              description: |-
                The type of transaction-specific details of the payment method used in the payment, one of `ach_credit_transfer`, `ach_debit`, `alipay`, `au_becs_debit`, `bancontact`, `card`, `card_present`, `eps`, `giropay`, `ideal`, `klarna`, `multibanco`, `p24`, `sepa_debit`, `sofort`, `stripe_account`, or `wechat`.
                An additional hash is included on `payment_method_details` with a name matching this value.
                It contains information specific to the payment method.
            wechat:
              title: payment_method_details_wechat
              type: object
              properties: {}
              x-expandableFields: []
          x-expandableFields:
            - ach_credit_transfer
            - ach_debit
            - alipay
            - au_becs_debit
            - bancontact
            - card
            - card_present
            - eps
            - fpx
            - giropay
            - ideal
            - klarna
            - multibanco
            - p24
            - sepa_debit
            - sofort
            - stripe_account
            - wechat
        receipt_email:
          type: string
          description:
            This is the email address that the receipt for this charge
            was sent to.
        receipt_number:
          type: string
          description:
            This is the transaction number that appears on email receipts
            sent for this charge. This attribute will be `null` until a receipt has
            been sent.
        receipt_url:
          type: string
          description:
            This is the URL to view the receipt for this charge. The receipt
            is kept up-to-date to the latest state of the charge, including any refunds.
            If the charge is for an Invoice, the receipt will be stylized as an Invoice
            receipt.
        refunded:
          type: boolean
          description:
            Whether the charge has been fully refunded. If the charge is
            only partially refunded, this attribute will still be false.
        refunds:
          title: RefundList
          required:
            - data
            - has_more
            - object
            - url
          type: object
          properties:
            data:
              type: array
              description: Details about each object.
              items:
                title: Refund
                required:
                  - amount
                  - created
                  - currency
                  - id
                  - metadata
                  - object
                type: object
                properties:
                  amount:
                    type: integer
                    description: Amount, in %s.
                  balance_transaction:
                    type: string
                    description:
                      Balance transaction that describes the impact on
                      your account balance.
                    x-expansionResources:
                      oneOf:
                        - $ref: '#/definitions/balance_transaction'
                  charge:
                    type: string
                    description: ID of the charge that was refunded.
                    x-expansionResources:
                      oneOf:
                        - $ref: '#/definitions/charge'
                  created:
                    type: integer
                    description:
                      Time at which the object was created. Measured in
                      seconds since the Unix epoch.
                  currency:
                    type: string
                    description:
                      Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
                      in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
                  description:
                    type: string
                    description:
                      An arbitrary string attached to the object. Often
                      useful for displaying to users. (Available on non-card refunds
                      only)
                  failure_balance_transaction:
                    type: string
                    description:
                      If the refund failed, this balance transaction describes
                      the adjustment made on your account balance that reverses the
                      initial balance transaction.
                    x-expansionResources:
                      oneOf:
                        - $ref: '#/definitions/balance_transaction'
                  failure_reason:
                    type: string
                    description:
                      If the refund failed, the reason for refund failure
                      if known. Possible values are `lost_or_stolen_card`, `expired_or_canceled_card`,
                      or `unknown`.
                  id:
                    type: string
                    description: Unique identifier for the object.
                  metadata:
                    type: object
                    properties: {}
                    description:
                      Set of key-value pairs that you can attach to an
                      object. This can be useful for storing additional information
                      about the object in a structured format.
                  object:
                    type: string
                    description:
                      String representing the object's type. Objects of
                      the same type share the same value.
                    enum:
                      - refund
                  payment_intent:
                    type: string
                    description: ID of the PaymentIntent that was refunded.
                    x-expansionResources:
                      oneOf:
                        - $ref: '#/definitions/payment_intent'
                  reason:
                    type: string
                    description:
                      Reason for the refund, either user-provided (`duplicate`,
                      `fraudulent`, or `requested_by_customer`) or generated by Stripe
                      internally (`expired_uncaptured_charge`).
                  receipt_number:
                    type: string
                    description:
                      This is the transaction number that appears on email
                      receipts sent for this refund.
                  source_transfer_reversal:
                    type: string
                    description:
                      The transfer reversal that is associated with the
                      refund. Only present if the charge came from another Stripe
                      account. See the Connect documentation for details.
                    x-expansionResources:
                      oneOf:
                        - $ref: '#/definitions/transfer_reversal'
                  status:
                    type: string
                    description:
                      Status of the refund. For credit card refunds, this
                      can be `pending`, `succeeded`, or `failed`. For other types
                      of refunds, it can be `pending`, `succeeded`, `failed`, or `canceled`.
                      Refer to our [refunds](https://stripe.com/docs/refunds#failed-refunds)
                      documentation for more details.
                  transfer_reversal:
                    type: string
                    description:
                      If the accompanying transfer was reversed, the transfer
                      reversal object. Only applicable if the charge was created using
                      the destination parameter.
                    x-expansionResources:
                      oneOf:
                        - $ref: '#/definitions/transfer_reversal'
                description: |-
                  `Refund` objects allow you to refund a charge that has previously been created
                  but not yet refunded. Funds will be refunded to the credit or debit card that
                  was originally charged.

                  Related guide: [Refunds](https://stripe.com/docs/refunds).
                x-expandableFields:
                  - balance_transaction
                  - charge
                  - failure_balance_transaction
                  - payment_intent
                  - source_transfer_reversal
                  - transfer_reversal
                x-resourceId: refund
            has_more:
              type: boolean
              description:
                True if this list has another page of items after this
                one that can be fetched.
            object:
              type: string
              description:
                String representing the object's type. Objects of the same
                type share the same value. Always has the value `list`.
              enum:
                - list
            url:
              type: string
              description: The URL where this list can be accessed.
          description: A list of refunds that have been applied to the charge.
          x-expandableFields:
            - data
        review:
          type: string
          description: ID of the review associated with this charge if one exists.
          x-expansionResources:
            oneOf:
              - $ref: '#/definitions/review'
        shipping:
          title: Shipping
          type: object
          properties:
            address:
              title: Address
              type: object
              properties:
                city:
                  type: string
                  description: City, district, suburb, town, or village.
                country:
                  type: string
                  description: Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
                line1:
                  type: string
                  description: Address line 1 (e.g., street, PO Box, or company name).
                line2:
                  type: string
                  description: Address line 2 (e.g., apartment, suite, unit, or building).
                postal_code:
                  type: string
                  description: ZIP or postal code.
                state:
                  type: string
                  description: State, county, province, or region.
              x-expandableFields: []
            carrier:
              type: string
              description:
                The delivery service that shipped a physical product, such
                as Fedex, UPS, USPS, etc.
            name:
              type: string
              description: Recipient name.
            phone:
              type: string
              description: Recipient phone (including extension).
            tracking_number:
              type: string
              description:
                The tracking number for a physical product, obtained from
                the delivery service. If multiple tracking numbers were generated
                for this purchase, please separate them with commas.
          x-expandableFields:
            - address
        source_transfer:
          type: string
          description:
            The transfer ID which created this charge. Only present if
            the charge came from another Stripe account. [See the Connect documentation](https://stripe.com/docs/connect/destination-charges)
            for details.
          x-expansionResources:
            oneOf:
              - $ref: '#/definitions/transfer'
        statement_descriptor:
          type: string
          description:
            For card charges, use `statement_descriptor_suffix` instead.
            Otherwise, you can use this value as the complete description of a charge
            on your customers’ statements. Must contain at least one letter, maximum
            22 characters.
        statement_descriptor_suffix:
          type: string
          description:
            Provides information about the charge that customers see on
            their statements. Concatenated with the prefix (shortened descriptor)
            or statement descriptor that’s set on the account to form the complete
            statement descriptor. Maximum 22 characters for the concatenated descriptor.
        status:
          type: string
          description:
            The status of the payment is either `succeeded`, `pending`,
            or `failed`.
        transfer:
          type: string
          description:
            ID of the transfer to the `destination` account (only applicable
            if the charge was created using the `destination` parameter).
          x-expansionResources:
            oneOf:
              - $ref: '#/definitions/transfer'
        transfer_data:
          title: ChargeTransferData
          required:
            - destination
          type: object
          properties:
            amount:
              type: integer
              description:
                The amount transferred to the destination account, if specified.
                By default, the entire charge amount is transferred to the destination
                account.
            destination:
              type: string
              description:
                ID of an existing, connected Stripe account to transfer
                funds to if `transfer_data` was specified in the charge request.
              x-expansionResources:
                oneOf:
                  - $ref: '#/definitions/account'
          x-expandableFields:
            - destination
        transfer_group:
          type: string
          description:
            A string that identifies this transaction as part of a group.
            See the [Connect documentation](https://stripe.com/docs/connect/charges-transfers#transfer-options)
            for details.
      description: |-
        To charge a credit or a debit card, you create a `Charge` object. You can
        retrieve and refund individual charges as well as list all charges. Charges
        are identified by a unique, random ID.

        Related guide: [Accept a payment with the Charges API](https://stripe.com/docs/payments/accept-a-payment-charges).
      x-expandableFields:
        - application
        - application_fee
        - balance_transaction
        - billing_details
        - customer
        - fraud_details
        - invoice
        - on_behalf_of
        - order
        - outcome
        - payment_intent
        - payment_method_details
        - refunds
        - review
        - shipping
        - source_transfer
        - transfer
        - transfer_data
      x-resourceId: charge
    external__stripe__event:
      title: NotificationEvent
      required:
        - created
        - data
        - id
        - livemode
        - object
        - pending_webhooks
        - type
      type: object
      properties:
        account:
          type: string
          description: The connected account that originated the event.
        api_version:
          type: string
          description:
            'The Stripe API version used to render `data`. *Note: This
            property is populated only for events on or after October 31, 2014*.'
        created:
          type: integer
          description:
            Time at which the object was created. Measured in seconds since
            the Unix epoch.
        data:
          title: NotificationEventData
          required:
            - object
          type: object
          properties:
            object:
              type: object
              properties: {}
              description:
                Object containing the API resource relevant to the event.
                For example, an `invoice.created` event will have a full [invoice
                object](https://stripe.com/docs/api#invoice_object) as the value of
                the object key.
            previous_attributes:
              type: object
              properties: {}
              description:
                Object containing the names of the attributes that have
                changed, and their previous values (sent along only with *.updated
                events).
          x-expandableFields: []
        id:
          type: string
          description: Unique identifier for the object.
        livemode:
          type: boolean
          description:
            Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
        object:
          type: string
          description:
            String representing the object's type. Objects of the same
            type share the same value.
          enum:
            - event
        pending_webhooks:
          type: integer
          description:
            Number of webhooks that have yet to be successfully delivered
            (i.e., to return a 20x response) to the URLs you've specified.
        request:
          title: NotificationEventRequest
          type: object
          properties:
            id:
              type: string
              description:
                ID of the API request that caused the event. If null, the
                event was automatic (e.g., Stripe's automatic subscription handling).
                Request logs are available in the [dashboard](https://dashboard.stripe.com/logs),
                but currently not in the API.
            idempotency_key:
              type: string
              description:
                'The idempotency key transmitted during the request, if
                any. *Note: This property is populated only for events on or after
                May 23, 2017*.'
          x-expandableFields: []
        type:
          type: string
          description: Description of the event (e.g., `invoice.created` or `charge.refunded`).
      description: |-
        Events are our way of letting you know when something interesting happens in
        your account. When an interesting event occurs, we create a new `Event`
        object. For example, when a charge succeeds, we create a `charge.succeeded`
        event; and when an invoice payment attempt fails, we create an
        `invoice.payment_failed` event. Note that many API requests may cause multiple
        events to be created. For example, if you create a new subscription for a
        customer, you will receive both a `customer.subscription.created` event and a
        `charge.succeeded` event.

        Events occur when the state of another API resource changes. The state of that
        resource at the time of the change is embedded in the event's data field. For
        example, a `charge.succeeded` event will contain a charge, and an
        `invoice.payment_failed` event will contain an invoice.

        As with other API resources, you can use endpoints to retrieve an
        [individual event](https://stripe.com/docs/api#retrieve_event) or a [list of events](https://stripe.com/docs/api#list_events)
        from the API. We also have a separate
        [webhooks](http://en.wikipedia.org/wiki/Webhook) system for sending the
        `Event` objects directly to an endpoint on your server. Webhooks are managed
        in your
        [account settings](https://dashboard.stripe.com/account/webhooks'),
        and our [Using Webhooks](https://stripe.com/docs/webhooks) guide will help you get set up.

        When using [Connect](https://stripe.com/docs/connect), you can also receive notifications of
        events that occur in connected accounts. For these events, there will be an
        additional `account` attribute in the received `Event` object.

        **NOTE:** Right now, access to events through the [Retrieve Event API](https://stripe.com/docs/api#retrieve_event) is
        guaranteed only for 30 days.
      x-expandableFields:
        - data
        - request
      x-resourceId: event
    webhook__handle_square_refund_args:
      type: object
      properties:
        merchant_id:
          minLength: 1
          type: string
          format: string
        type:
          minLength: 1
          type: string
          format: string
        event_id:
          minLength: 1
          type: string
          format: string
        created_at:
          minLength: 1
          type: string
          format: string
        data:
          type: object
          properties:
            type:
              minLength: 1
              type: string
              format: string
            id:
              minLength: 1
              type: string
              format: string
            object:
              type: object
              properties:
                refund:
                  type: object
                  properties:
                    amount_money:
                      type: object
                      properties:
                        amount:
                          type: integer
                          format: int64
                        currency:
                          minLength: 1
                          type: string
                          format: string
                    created_at:
                      minLength: 1
                      type: string
                      format: string
                    destination_type:
                      minLength: 1
                      type: string
                      format: string
                    id:
                      minLength: 1
                      type: string
                      format: string
                    location_id:
                      minLength: 1
                      type: string
                      format: string
                    order_id:
                      minLength: 1
                      type: string
                      format: string
                    payment_id:
                      minLength: 1
                      type: string
                      format: string
                    reason:
                      minLength: 1
                      type: string
                      format: string
                    status:
                      minLength: 1
                      type: string
                      format: string
                    updated_at:
                      minLength: 1
                      type: string
                      format: string
                    version:
                      type: integer
                      format: int64
                    processing_fee:
                      type: array
                      nullable: true
                      items:
                        type: object
                        properties:
                          amount_money:
                            type: object
                            properties:
                              amount:
                                type: integer
                                format: int64
                              currency:
                                minLength: 1
                                type: string
                                format: string
                          effective_at:
                            minLength: 1
                            type: string
                            format: string
                          type:
                            minLength: 1
                            type: string
                            format: string
    webhook__webhook_test_response:
      required:
        - test_status
      type: object
      properties:
        test_status:
          type: boolean
    webhook__virtual-card-authorization-transaction__funding:
      type: object
      properties:
        amount:
          type: integer
          format: integer
        type:
          type: string
          format: string
        token:
          type: string
          format: string
    webhook__virtual-card-authorization-transaction__asa_transaction_response:
      type: object
      properties:
        result:
          type: string
          format: string
        token:
          type: string
          format: string
    webhook__virtual-card-authorization-transaction__merchant:
      type: object
      properties:
        acceptor_id:
          type: string
          format: string
        city:
          type: string
          format: string
        country:
          type: string
          format: string
        descriptor:
          type: string
          format: string
        mcc:
          type: string
          format: string
        state:
          type: string
          format: string
    webhook__virtual-card-authorization-transaction__pos:
      type: object
      properties:
        terminal:
          type: object
          properties:
            attended:
              type: boolean
            operator:
              type: string
              format: string
            on_premise:
              type: boolean
            card_retention_capable:
              type: boolean
            pin_capability:
              type: string
              format: string
            type:
              type: string
              format: string
            partial_approval_capable:
              type: boolean
        entry_mode:
          type: object
          properties:
            pan:
              type: string
              format: string
            pin_entered:
              type: boolean
            cardholder:
              type: string
              format: string
            card:
              type: string
              format: string
    webhook__virtual-card-authorization-transaction__asa_transaction:
      type: object
      properties:
        amount:
          type: integer
          format: integer
        acquirer_fee:
          type: integer
          format: integer
        authorization_amount:
          type: integer
          format: integer
        avs:
          type: object
          properties:
            address:
              type: string
              format: string
            zipcode:
              type: string
              format: string
        card:
          $ref: '#/components/schemas/webhook__virtual-card-authorization-transaction__card'
        cardholder_authentication:
          $ref: '#/components/schemas/webhook__virtual-card-authorization-transaction__cardholder_authentication'
        cash_amount:
          type: integer
          format: integer
        conversion_rate:
          type: number
          format: float
        created:
          type: string
          format: date-time
        events:
          type: array
          items:
            $ref: '#/components/schemas/webhook__virtual-card-authorization-transaction__event'
        funding:
          type: array
          items:
            $ref: '#/components/schemas/webhook__virtual-card-authorization-transaction__funding'
        merchant_amount:
          type: integer
          format: integer
        merchant_currency:
          type: string
          format: string
        merchant:
          $ref: '#/components/schemas/webhook__virtual-card-authorization-transaction__merchant'
        network:
          type: string
          format: string
        pos:
          $ref: '#/components/schemas/webhook__virtual-card-authorization-transaction__pos'
        settled_amount:
          type: integer
          format: integer
        status:
          type: string
          format: string
        token:
          type: string
          format: string
        token_info:
          type: object
          properties:
            wallet_type:
              type: string
              format: string
    webhook__virtual-card-authorization-transaction__cardholder_authentication:
      type: object
      properties:
        verification_attempted:
          type: string
          format: string
        verification_result:
          type: string
          format: string
        liability_shift:
          type: string
          format: string
        3ds_version:
          type: string
          format: string
        acquirer_exemption:
          type: string
          format: string
        authentication_result:
          type: string
          format: string
        decision_made_by:
          type: string
          format: string
        three_ds_authentication_token:
          type: string
          format: string
    webhook__virtual-card-authorization-transaction__card:
      type: object
      properties:
        created:
          type: string
          format: string
        cvv:
          type: string
          format: string
        funding:
          type: object
          properties:
            created:
              type: string
              format: string
            token:
              type: string
              format: string
            type:
              type: string
              format: string
            state:
              type: string
              format: string
            nickname:
              type: string
              format: string
            account_name:
              type: string
              format: string
            last_four:
              type: string
              format: string
        exp_month:
          type: string
          format: string
        exp_year:
          type: string
          format: string
        hostname:
          type: string
          format: string
        last_four:
          type: string
          format: string
        memo:
          type: string
          format: string
        pan:
          type: string
          format: string
        spend_limit:
          type: integer
          format: integer
        spend_limit_duration:
          type: string
          format: string
        state:
          type: string
          format: string
        token:
          type: string
          format: string
        type:
          type: string
          format: string
        auth_rule_tokens:
          type: array
          items:
            type: string
            format: string
        digital_card_art_token:
          type: string
          format: string
    webhook__virtual-card-authorization-transaction__event:
      type: object
      properties:
        amount:
          type: integer
          format: integer
        created:
          type: string
          format: string
        result:
          type: string
          format: string
        type:
          type: string
          format: string
        token:
          type: string
          format: string
    list_transactions_response:
      required:
        - hasMore
        - nextCursor
        - transactions
      type: object
      properties:
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/ledger_transaction'
        nextCursor:
          type: string
          format: string
        hasMore:
          type: boolean
    virtual_card:
      required:
        - createdAt
        - id
        - metadata
        - type
      type: object
      properties:
        id:
          type: string
          format: string
        type:
          type: string
          format: string
        createdAt:
          type: string
          format: date-time
        metadata:
          type: object
          additionalProperties:
            type: object
            properties: {}
        card:
          required:
            - cardHolderName
            - cardNetwork
            - expMonth
            - expYear
            - lastFour
            - state
          type: object
          properties:
            lastFour:
              type: string
              format: string
            expMonth:
              type: string
              format: string
            expYear:
              type: string
              format: string
            cardHolderName:
              type: string
              format: string
            cardNetwork:
              type: string
              format: string
            state:
              type: string
              format: string
    initialize_payment_session_args:
      required:
        - customerId
      type: object
      properties:
        customerId:
          minLength: 1
          type: string
          format: string
    ledger_transaction:
      required:
        - amount
        - created
        - transactionId
        - transactionType
      type: object
      properties:
        transactionId:
          type: string
          format: string
          nullable: true
        customerId:
          type: string
          format: string
          nullable: true
        transactionType:
          type: string
          format: string
          nullable: true
        transactionSource:
          type: string
          format: string
          nullable: true
        paymentMethodId:
          type: string
          format: string
          nullable: true
        reason:
          type: string
          format: string
          nullable: true
        amount:
          type: integer
          format: int64
          nullable: true
        from:
          type: string
          format: string
          nullable: true
        to:
          type: string
          format: string
          nullable: true
        label:
          type: string
          format: string
          nullable: true
        metadata:
          type: object
          properties: {}
          nullable: true
        created:
          type: string
          format: date-time
          nullable: true
    virtual_card_transaction:
      required:
        - acceptorId
        - authorizationAmount
        - created
        - decision
        - id
        - status
      type: object
      properties:
        id:
          type: string
          format: string
        acceptorId:
          type: string
          format: string
        status:
          type: string
          format: string
          enum:
            - OPEN
            - PAUSED
            - CLOSED
        decision:
          type: string
          format: string
        authorizationAmount:
          type: integer
          format: int64
        created:
          type: string
          format: date-time
    version_info:
      required:
        - gitCommitHash
      type: object
      properties:
        gitCommitHash:
          type: string
          format: string
    merchant:
      required:
        - id
        - metadata
        - name
      type: object
      properties:
        id:
          type: string
          format: string
        name:
          type: string
          format: string
        metadata:
          required:
            - auto_reload_config
            - omsProvider
            - paymentProcessor
            - promotions
            - square
            - stripe
          type: object
          properties:
            paymentProcessor:
              type: string
              format: string
            omsProvider:
              type: string
              format: string
            square:
              required:
                - appClientId
                - defaultLocationId
                - isTestMode
              type: object
              properties:
                isTestMode:
                  type: boolean
                appClientId:
                  type: string
                defaultLocationId:
                  type: string
                accessToken:
                  type: string
            stripe:
              required:
                - isTestMode
              type: object
              properties:
                isTestMode:
                  type: boolean
                connectedAccountId:
                  type: string
            promotions:
              required:
                - rewardTiers
                - type
              type: object
              properties:
                type:
                  type: string
                  format: string
                rewardTiers:
                  type: array
                  items:
                    required:
                      - minTransactionRequirement
                      - promotionAmount
                    type: object
                    properties:
                      minTransactionRequirement:
                        type: integer
                        format: int64
                      promotionAmount:
                        type: integer
                        format: int64
            auto_reload_config:
              required:
                - maximum_auto_reload_amount
                - minimum_auto_reload_amount
                - minimum_auto_reload_threshold
              type: object
              properties:
                minimum_auto_reload_threshold:
                  type: integer
                  format: int64
                minimum_auto_reload_amount:
                  type: integer
                  format: int64
                maximum_auto_reload_amount:
                  type: integer
                  format: int64
    error:
      required:
        - message
      type: object
      properties:
        code:
          type: integer
          format: int64
        message:
          type: string
        fields:
          type: string
    admin__settle_merchant_balance_response:
      required:
        - achTransferId
        - settlementAmount
        - timestamp
        - transactionId
      type: object
      properties:
        settlementAmount:
          type: integer
          format: int64
        timestamp:
          type: string
          format: date-time
        transactionId:
          type: string
          format: string
        achTransferId:
          type: string
          format: string
    list_virtual_card_transactions_response:
      required:
        - hasMore
        - nextCursor
        - transactions
      type: object
      properties:
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/virtual_card_transaction'
        nextCursor:
          type: string
          format: string
        hasMore:
          type: boolean
    ansa_error:
      required:
        - code
        - message
        - type
      type: object
      properties:
        type:
          type: string
          format: string
        code:
          type: string
          format: string
        message:
          type: string
          format: string
        declineCode:
          type: string
          format: string
        deficit:
          required:
            - amount
            - currency
          type: object
          properties:
            amount:
              type: integer
              format: int64
            currency:
              type: string
              format: string
    health_response:
      required:
        - versionInfo
      type: object
      properties:
        versionInfo:
          $ref: '#/components/schemas/version_info'
    count_response:
      required:
        - totalCount
      type: object
      properties:
        totalCount:
          type: integer
    list_transactions_response_no_pagination:
      required:
        - transactions
      type: object
      properties:
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/ledger_transaction'
    internal-admin__customers_list_response:
      required:
        - cursor
        - hasMore
        - results
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/internal-admin__customer'
        hasMore:
          type: boolean
        cursor:
          type: string
    internal-admin__create_merchant_args:
      required:
        - name
      type: object
      properties:
        name:
          type: string
          format: string
        gatewayToken:
          type: string
          format: string
        stripeSecretKey:
          type: string
          format: string
        stripeConnectedAccountId:
          type: string
          format: string
        squareAccessToken:
          type: string
          format: string
        squareRefreshToken:
          type: string
          format: string
        squareAppClientId:
          type: string
          format: string
        squareAppClientSecret:
          type: string
          format: string
        defaultPaymentProcessor:
          type: string
          format: string
        orderManagementProvider:
          type: string
          format: string
        sardineClientId:
          type: string
          format: string
        promoConfig:
          required:
            - promoType
            - rewardTiers
          type: object
          properties:
            promoType:
              type: string
              format: string
            rewardTiers:
              type: array
              items:
                required:
                  - minTransactionRequirement
                  - promoAmount
                type: object
                properties:
                  minTransactionRequirement:
                    type: integer
                    format: int64
                  promoAmount:
                    type: integer
                    format: int64
    internal-admin__fund_balance_args:
      required:
        - amount
        - currency
        - customerId
      type: object
      properties:
        amount:
          type: integer
          format: int64
        currency:
          type: string
          format: string
        customerId:
          type: string
          format: string
        reason:
          type: string
          format: string
          nullable: true
        metadata:
          type: object
          additionalProperties:
            type: object
            properties: {}
    internal-admin__payment_methods_list:
      required:
        - count
        - paymentMethods
      type: object
      properties:
        paymentMethods:
          type: array
          items:
            $ref: '#/components/schemas/internal-admin__payment_method'
        count:
          type: integer
          format: int64
    internal-admin__customer:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          format: string
        billingFirst:
          type: string
          format: string
        billingLast:
          type: string
          format: string
        email:
          type: string
          format: string
        phoneNumber:
          type: string
          format: string
        status:
          minLength: 1
          type: string
          format: string
          nullable: true
        balance:
          $ref: '#/components/schemas/internal-admin__balance'
        paymentMethods:
          $ref: '#/components/schemas/internal-admin__payment_methods_list'
        autoReloadConfig:
          required:
            - enabled
            - paymentMethodId
            - reloadAmount
            - triggerThresholdAmount
          type: object
          properties:
            enabled:
              type: boolean
            reloadAmount:
              type: integer
              format: int64
            triggerThresholdAmount:
              type: integer
              format: int64
            paymentMethodId:
              type: string
              format: string
        metadata:
          type: object
          properties: {}
          nullable: true
        ansaMetadata:
          type: object
          properties:
            square:
              required:
                - customerId
              type: object
              properties:
                customerId:
                  type: string
                  format: string
            stripe:
              required:
                - customerId
              type: object
              properties:
                customerId:
                  type: string
                  format: string
    internal-admin__merchant_acceptor_id:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          format: string
        label:
          type: string
          format: string
    internal-admin__balance:
      required:
        - amount
        - currency
      type: object
      properties:
        amount:
          type: integer
          format: int64
        currency:
          type: string
          format: string
    internal-admin__upsert_merchant_acceptor_ids_args:
      required:
        - acceptorIds
      type: object
      properties:
        acceptorIds:
          type: array
          items:
            $ref: '#/components/schemas/internal-admin__merchant_acceptor_id'
    internal-admin__activate_virtual_card_program_args:
      type: object
      properties:
        digitalCardArtToken:
          type: string
          format: string
    internal-admin__manual_operation_response:
      required:
        - timestamp
        - transactionId
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        transactionId:
          type: string
          format: string
    internal-admin__fund_balance_response:
      required:
        - currentBalance
        - customerId
        - timestamp
        - transactionId
      type: object
      properties:
        customerId:
          type: string
          format: string
        timestamp:
          type: string
          format: date-time
        currentBalance:
          $ref: '#/components/schemas/customer__balance'
        transactionId:
          type: string
          format: string
    internal-admin__merchant_api_key:
      required:
        - merchantId
        - merchantSecretKey
      type: object
      properties:
        merchantId:
          type: string
          format: string
        merchantSecretKey:
          type: string
          format: string
    internal-admin__payment_method_card:
      type: object
      properties:
        lastFour:
          type: string
          format: string
        firstSix:
          type: string
          format: string
        brand:
          type: string
          format: string
        fingerprint:
          type: string
          format: string
    internal-admin__merchants_list_response:
      required:
        - count
        - nextCursor
        - results
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/merchant'
        nextCursor:
          type: integer
          format: int64
        count:
          type: integer
          format: int64
    internal-admin__payment_method:
      type: object
      properties:
        id:
          type: string
          format: string
        type:
          type: string
          format: string
        card:
          $ref: '#/components/schemas/internal-admin__payment_method_card'
        preferred:
          type: boolean
        metadata:
          type: object
          additionalProperties:
            type: object
            properties: {}
    internal-admin__merchant_acceptor_ids_list_response:
      required:
        - acceptorIds
      type: object
      properties:
        acceptorIds:
          type: array
          items:
            $ref: '#/components/schemas/internal-admin__merchant_acceptor_id'
    initialize_payment_session_response:
      required:
        - clientSecret
        - created
        - customerId
        - id
        - validUntil
      type: object
      properties:
        id:
          type: string
          format: string
        clientSecret:
          type: string
          format: string
        customerId:
          type: string
          format: string
        created:
          type: string
          format: date-time
        validUntil:
          type: string
          format: date-time
    customer__create_customer_clone_response:
      required:
        - customerId
      type: object
      properties:
        customerId:
          type: string
          format: string
        paymentMethodIds:
          type: array
          items:
            type: string
            format: string
    customer__create_payment_method_clone_response:
      required:
        - paymentMethodId
      type: object
      properties:
        paymentMethodId:
          type: string
          format: string
    customer__create_customer_clone_args:
      required:
        - customerIdToClone
      type: object
      properties:
        email:
          type: string
          format: string
          nullable: true
        phone:
          type: string
          format: string
          nullable: true
        customerIdToClone:
          type: string
          format: string
          nullable: true
        billingDetails:
          $ref: '#/components/schemas/customer__billing_details'
    customer__auto_reload_config_response:
      required:
        - enabled
      type: object
      properties:
        enabled:
          type: boolean
        reloadAmount:
          type: integer
          format: int64
          nullable: true
        reloadThreshold:
          type: integer
          format: int64
          nullable: true
        paymentMethodId:
          type: string
          format: string
          nullable: true
    customer__update_customer_args:
      type: object
      properties:
        email:
          type: string
          format: string
          nullable: true
        phone:
          type: string
          format: string
          nullable: true
        firstName:
          minLength: 1
          type: string
          format: string
          nullable: true
        lastName:
          minLength: 1
          type: string
          format: string
          nullable: true
        metadata:
          type: object
          additionalProperties:
            type: object
            properties: {}
    customer__payment_methods_list:
      required:
        - count
        - paymentMethods
      type: object
      properties:
        paymentMethods:
          type: array
          items:
            $ref: '#/components/schemas/customer__payment_method'
        count:
          type: integer
          format: int64
    customer__billing_details:
      required:
        - firstName
        - lastName
      type: object
      properties:
        firstName:
          minLength: 1
          type: string
          format: string
          nullable: true
        lastName:
          minLength: 1
          type: string
          format: string
          nullable: true
        address:
          $ref: '#/components/schemas/customer__address'
    customer__add_balance_args:
      required:
        - amount
        - currency
        - paymentMethodId
      type: object
      properties:
        amount:
          type: integer
          format: int64
        currency:
          type: string
          format: string
        disablePromotion:
          type: boolean
          description:
            Passing this flag in the body of the add balance request disables
            any promotional config for this request. i.e. the described balance will
            be added and no additional funds.
          format: boolean
        paymentMethodId:
          type: string
          format: string
        metadata:
          type: object
          additionalProperties:
            type: object
            properties: {}
    customer__customer:
      type: object
      properties:
        id:
          minLength: 1
          type: string
          format: string
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        merchantId:
          minLength: 1
          type: string
          format: string
          nullable: true
        status:
          minLength: 1
          type: string
          format: string
          nullable: true
        balance:
          $ref: '#/components/schemas/customer__balance'
        billingDetails:
          $ref: '#/components/schemas/customer__billing_details'
        email:
          minLength: 1
          type: string
          format: string
          nullable: true
        phone:
          minLength: 1
          type: string
          format: string
          nullable: true
        metadata:
          type: object
          properties: {}
          nullable: true
        ansaMetadata:
          type: object
          properties:
            square:
              required:
                - customerId
              type: object
              properties:
                customerId:
                  type: string
                  format: string
            stripe:
              required:
                - customerId
              type: object
              properties:
                customerId:
                  type: string
                  format: string
    customer__balance:
      required:
        - amount
        - currency
      type: object
      properties:
        amount:
          type: integer
          format: int64
        currency:
          type: string
          format: string
    customer__create_payment_method_clone_args:
      required:
        - paymentMethodIdToClone
      type: object
      properties:
        paymentMethodIdToClone:
          type: string
          format: string
          nullable: true
    customer__add_balance_response:
      required:
        - currentBalance
        - timestamp
        - transactionId
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        currentBalance:
          $ref: '#/components/schemas/customer__balance'
        transactionId:
          type: string
          format: string
    customer__order_info__order_info:
      required:
        - type
      type: object
      properties:
        type:
          type: string
          format: string
        square:
          $ref: '#/components/schemas/customer__order_info__square_order_info'
    customer__order_info__square_fulfillment:
      required:
        - pickupDetails
      type: object
      properties:
        pickupDetails:
          required:
            - pickupAt
          type: object
          properties:
            pickupAt:
              type: string
              format: date-time
            pickupWindowDuration:
              type: string
              format: string
              nullable: true
            scheduleType:
              type: string
              format: string
              nullable: true
            note:
              type: string
              format: string
              nullable: true
    customer__order_info__order_info_response:
      required:
        - type
      type: object
      properties:
        type:
          type: string
          format: string
        square:
          $ref: '#/components/schemas/customer__order_info__square_order_info_response'
    customer__order_info__square_order_info_response:
      required:
        - orderId
      type: object
      properties:
        orderId:
          type: string
          format: string
          nullable: true
        paymentId:
          type: string
          format: string
          nullable: true
        locationId:
          type: string
          format: string
          nullable: true
    customer__order_info__square_line_item:
      required:
        - catalogObjectId
        - quantity
      type: object
      properties:
        quantity:
          type: integer
          format: int64
        catalogObjectId:
          type: string
          format: string
        note:
          type: string
          format: string
          nullable: true
        modifiers:
          type: array
          nullable: true
          items:
            type: object
            properties:
              basePriceMoney:
                type: integer
                format: int64
                nullable: true
              catalogObjectId:
                type: string
                format: string
                nullable: true
              name:
                type: string
                format: string
                nullable: true
              quantity:
                type: integer
                format: int64
                nullable: true
    customer__order_info__square_order_info:
      type: object
      properties:
        locationId:
          type: string
          format: string
          nullable: true
        lineItems:
          type: array
          items:
            $ref: '#/components/schemas/customer__order_info__square_line_item'
        fulfillment:
          $ref: '#/components/schemas/customer__order_info__square_fulfillment'
        tipAmount:
          type: integer
          format: int64
          nullable: true
        orderId:
          type: string
          format: string
          nullable: true
        reward:
          required:
            - loyaltyAccountId
            - rewardTierId
          type: object
          properties:
            loyaltyAccountId:
              type: string
              format: string
              nullable: true
            rewardTierId:
              type: string
              format: string
              nullable: true
          nullable: true
        rewards:
          type: array
          items:
            required:
              - loyaltyAccountId
              - rewardTierId
            type: object
            properties:
              loyaltyAccountId:
                type: string
                format: string
                nullable: true
              rewardTierId:
                type: string
                format: string
                nullable: true
            nullable: true
    customer__address:
      required:
        - city
        - country
        - line1
        - postalCode
        - state
      type: object
      properties:
        city:
          minLength: 1
          type: string
          format: string
          nullable: true
        country:
          minLength: 1
          type: string
          format: string
          nullable: true
        line1:
          minLength: 1
          type: string
          format: string
          nullable: true
        line2:
          minLength: 1
          type: string
          format: string
          nullable: true
        postalCode:
          minLength: 1
          type: string
          format: string
          nullable: true
        state:
          minLength: 1
          type: string
          format: string
          nullable: true
    customer__customer_list_response:
      required:
        - cursor
        - customers
        - hasMore
      type: object
      properties:
        hasMore:
          type: boolean
        cursor:
          type: string
          format: string
        customers:
          type: array
          items:
            $ref: '#/components/schemas/customer__customer'
    customer__virtual_card_provision_response:
      required:
        - encryptedData
        - ephemeralPublicKey
        - provisioningPayload
      type: object
      properties:
        provisioningPayload:
          type: string
          format: string
        ephemeralPublicKey:
          type: string
          format: string
        encryptedData:
          type: string
          format: string
    customer__virtual_card_provision_args:
      required:
        - digitalWallet
      type: object
      properties:
        digitalWallet:
          type: string
          format: string
        nonce:
          type: string
          format: string
        nonceSignature:
          type: string
          format: string
        certificate:
          type: string
          format: string
    customer__create_customer_args:
      required:
        - billingDetails
      type: object
      properties:
        email:
          type: string
          format: string
          nullable: true
        phone:
          type: string
          format: string
          nullable: true
        billingDetails:
          $ref: '#/components/schemas/customer__billing_details'
        metadata:
          type: object
          additionalProperties:
            type: object
            properties: {}
    customer__create_payment_method_args:
      required:
        - token
        - tokenSource
      type: object
      properties:
        token:
          type: string
          format: string
          nullable: true
        tokenSource:
          type: string
          format: string
          nullable: true
        postalCode:
          type: string
          format: string
        tokenData:
          type: object
          properties: {}
        metadata:
          type: object
          additionalProperties:
            type: object
            properties: {}
    customer__use_balance_args:
      required:
        - amount
      type: object
      properties:
        amount:
          type: integer
          format: int64
        reloadInfo:
          $ref: '#/components/schemas/customer__reload_info'
        orderInfo:
          $ref: '#/components/schemas/customer__order_info__order_info'
        label:
          type: string
          format: string
        metadata:
          type: object
          additionalProperties:
            type: object
            properties: {}
    customer__update_payment_method_args:
      type: object
      properties:
        preferred:
          type: boolean
          nullable: true
    customer__payment_method_card:
      type: object
      properties:
        lastFour:
          type: string
          format: string
        firstSix:
          type: string
          format: string
        brand:
          type: string
          format: string
        fingerprint:
          type: string
          format: string
    customer__update_virtual_card_args:
      required:
        - status
      type: object
      properties:
        status:
          type: string
          enum:
            - OPEN
            - PAUSED
            - CLOSED
    customer__reload_info:
      required:
        - amount
        - currency
        - paymentMethodId
      type: object
      properties:
        amount:
          type: integer
          format: int64
        currency:
          type: string
          format: string
        paymentMethodId:
          type: string
          format: string
        metadata:
          type: object
          additionalProperties:
            type: object
            properties: {}
    customer__payment_method:
      type: object
      properties:
        id:
          type: string
          format: string
        type:
          type: string
          format: string
        card:
          $ref: '#/components/schemas/customer__payment_method_card'
        preferred:
          type: boolean
        metadata:
          type: object
          additionalProperties:
            type: object
            properties: {}
    customer__use_balance_response:
      required:
        - currentBalance
        - label
        - timestamp
        - transactionId
      type: object
      properties:
        currentBalance:
          $ref: '#/components/schemas/customer__balance'
        transactionId:
          type: string
          format: string
        timestamp:
          type: string
          format: date-time
        label:
          type: string
          format: string
        orderInfo:
          $ref: '#/components/schemas/customer__order_info__order_info_response'
    customer__auto_reload_config_args:
      required:
        - enabled
      type: object
      properties:
        enabled:
          type: boolean
        reloadAmount:
          type: integer
          format: int64
          nullable: true
        reloadThreshold:
          type: integer
          format: int64
          nullable: true
        paymentMethodId:
          type: string
          format: string
          nullable: true
    merchant__update_transaction_metadata_args:
      type: object
      properties:
        label:
          type: string
          format: string
          nullable: true
        metadata:
          type: object
          additionalProperties:
            type: object
            properties: {}
    merchant__expiry_args:
      required:
        - transactionId
      type: object
      properties:
        transactionId:
          type: string
          format: string
        amount:
          type: integer
          format: int64
          nullable: true
        reason:
          type: string
          format: string
          nullable: true
        metadata:
          type: object
          additionalProperties:
            type: object
            properties: {}
    merchant__refund_response:
      required:
        - amount
        - created
        - currency
        - customerId
        - id
        - metadata
        - reason
        - status
        - transactionId
        - type
      type: object
      properties:
        id:
          type: string
          format: string
        transactionId:
          type: string
          format: string
        customerId:
          type: string
          format: string
        type:
          type: string
          enum:
            - balance
            - payment_method
        amount:
          type: integer
          format: int64
        currency:
          type: string
          format: string
        reason:
          type: string
          format: string
        paymentMethod:
          required:
            - id
          type: object
          properties:
            id:
              type: string
              format: string
        status:
          type: string
          enum:
            - pending
            - succeeded
            - failed
        metadata:
          type: object
          properties: {}
        created:
          type: string
          format: date-time
    merchant__fund_balance_args:
      required:
        - amount
        - currency
        - customerId
      type: object
      properties:
        amount:
          type: integer
          format: int64
        currency:
          type: string
          format: string
        customerId:
          type: string
          format: string
        reason:
          type: string
          format: string
          nullable: true
        metadata:
          type: object
          additionalProperties:
            type: object
            properties: {}
    merchant__insights:
      required:
        - totalCustomerAddedBalance
        - totalCustomerBalance
        - totalMerchantFundedBalance
        - totalSettledBalance
        - totalUsers
      type: object
      properties:
        totalCustomerAddedBalance:
          $ref: '#/components/schemas/customer__balance'
        totalCustomerBalance:
          $ref: '#/components/schemas/customer__balance'
        totalMerchantFundedBalance:
          $ref: '#/components/schemas/customer__balance'
        totalSettledBalance:
          $ref: '#/components/schemas/customer__balance'
        totalUsers:
          type: integer
          format: int64
    merchant__refund_args:
      required:
        - transactionId
      type: object
      properties:
        transactionId:
          type: string
          format: string
        amount:
          type: integer
          format: int64
          nullable: true
        reason:
          type: string
          format: string
          nullable: true
        metadata:
          type: object
          additionalProperties:
            type: object
            properties: {}
    merchant__balance:
      required:
        - amount
        - currency
        - promotionalAmount
      type: object
      properties:
        amount:
          type: integer
          format: int64
        currency:
          type: string
          format: string
        promotionalAmount:
          type: integer
          format: int64
    merchant__update_transaction_label_args:
      required:
        - label
      type: object
      properties:
        label:
          type: string
          format: string
    merchant__update_merchant_args:
      type: object
      properties:
        promoConfig:
          required:
            - promoType
            - rewardTiers
          type: object
          properties:
            promoType:
              type: string
              format: string
            rewardTiers:
              type: array
              items:
                required:
                  - minTransactionRequirement
                  - promoAmount
                type: object
                properties:
                  minTransactionRequirement:
                    type: integer
                    format: int64
                  promoAmount:
                    type: integer
                    format: int64
    merchant__expiry_response:
      required:
        - amount
        - created
        - currency
        - customerId
        - expiryTransactionId
        - metadata
        - promoTransactionId
        - reason
      type: object
      properties:
        expiryTransactionId:
          type: string
          format: string
        promoTransactionId:
          type: string
          format: string
        customerId:
          type: string
          format: string
        amount:
          type: integer
          format: int64
        currency:
          type: string
          format: string
        reason:
          type: string
          format: string
        metadata:
          type: object
          properties: {}
        created:
          type: string
          format: date-time
    merchant__fund_balance_response:
      required:
        - currentBalance
        - customerId
        - timestamp
        - transactionId
      type: object
      properties:
        customerId:
          type: string
          format: string
        timestamp:
          type: string
          format: date-time
        currentBalance:
          $ref: '#/components/schemas/customer__balance'
        transactionId:
          type: string
          format: string
